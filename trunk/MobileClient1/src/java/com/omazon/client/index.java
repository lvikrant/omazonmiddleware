/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.omazon.client;

import com.sun.xml.ws.security.trust.elements.Participant;
import com.test.MobileSessionBeanRemote;
import com.test.OmazonCarrier;
import com.test.OmazonCarrierEJBRemote;
import com.test.OmazonCustomer;
import com.test.OmazonCustomerEJBRemote;
import com.test.OmazonDelivery;
import com.test.OmazonDeliveryEJBRemote;
import com.test.OmazonLocationEJBRemote;
import com.test.OmazonOrder;
import com.test.OmazonOrderEJBRemote;
import com.test.OmazonProduct;
import com.test.OmazonProductEJBRemote;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.EJB;
import javax.jms.JMSException;
import javax.jms.TextMessage;
import javax.naming.NamingException;

/**
 *
 * @author dell
 */
public class index extends javax.swing.JFrame {

    @EJB
    private static OmazonLocationEJBRemote omazonLocationEJB;
    @EJB
    private static OmazonDeliveryEJBRemote omazonDeliveryEJB;
    @EJB
    private static OmazonCarrierEJBRemote omazonCarrierEJB;
    @EJB
    private static OmazonOrderEJBRemote omazonOrderEJB;
    @EJB
    private static OmazonCustomerEJBRemote omazonCustomerEJB;
    @EJB
    private static OmazonProductEJBRemote omazonProductEJB;
    @EJB
    private static MobileSessionBeanRemote mobileRemote;

    /**
     * Creates new form index
     */
    public index() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("OMAZON");

        jButton1.setText("Add Product");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Add Customer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Locate Order");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Modify Product");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Update Status");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Order Product");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Modify Customer");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Update Local DB");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57))
            .addGroup(layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        addCustomer cust = new addCustomer();
        close();
        cust.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        locateOrder order = new locateOrder();
        close();
        order.setVisible(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        addProduct add = new addProduct();
        close();
        add.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        modifyProduct modify = new modifyProduct();
        close();
        modify.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        updateStatus update = new updateStatus();
        close();
        update.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        addOrder add = new addOrder();
        close();
        add.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        modifyCustomer mod = new modifyCustomer();
        close();
        mod.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        TestCoord coord = new TestCoord();
        int flag = 0;
        TextMessage msg;
        String rec_msg = null;
        try {
            if (coord.sendJMSMessageToDest("R") == true) {
                System.out.println("First message sent successfully from Remote Client 1");
            }
        } catch (JMSException ex) {
            ex.printStackTrace();
            Logger.getLogger(index.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NamingException ex) {
            ex.printStackTrace();
            Logger.getLogger(index.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void updateCustomerTable() {
        int index = 0;
        List<OmazonCustomer> omazonCustomerList = null;
        OmazonCustomer customer = null;
        Connection connect = null;
        PreparedStatement ps;
        int rowCount;

        omazonCustomerList = Main.omazonCustomerEJB.findAllCustomers();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost/locdb1?" + "user=dbuser&password=dbpass");
            String query = "delete from omazon_customer";
            ps = connect.prepareStatement(query);
            rowCount = ps.executeUpdate();
        } catch (Exception e) {
        } finally {
            try {
                connect.close();
            } catch (SQLException ex) {
                Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        while (index != omazonCustomerList.size()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                try {
                    customer = omazonCustomerList.get(index);
                    index++;
                    connect = DriverManager.getConnection("jdbc:mysql://localhost/locdb1?" + "user=dbuser&password=dbpass");
                    String sql = "INSERT INTO omazon_customer (customer_id, customer_name, customer_addr, customer_phone, customer_email)" + "VALUES(?,?,?,?,?)";
                    ps = connect.prepareStatement(sql);
                    ps.setInt(1, customer.getCustomerId());
                    ps.setString(2, customer.getCustomerName());
                    ps.setString(3, customer.getCustomerAddr());
                    ps.setInt(4, customer.getCustomerPhone());
                    ps.setString(5, customer.getCustomerEmail());
                    rowCount = ps.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(addProduct.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        connect.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(addProduct.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    connect.close();
                } catch (SQLException ex) {
                    Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void updateOrderTable() {
        int index = 0;
        List<OmazonOrder> omazonOrderList = null;
        OmazonOrder order = null;
        Connection connect = null;
        PreparedStatement ps;
        int rowCount;

        omazonOrderList = Main.omazonOrderEJB.findAllOrders();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost/locdb1?" + "user=dbuser&password=dbpass");
            String query = "delete from omazon_order";
            ps = connect.prepareStatement(query);
            rowCount = ps.executeUpdate();
        } catch (Exception e) {
            Logger.getLogger(addProduct.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                connect.close();
            } catch (SQLException ex) {
                Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        while (index != omazonOrderList.size()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                try {
                    order = omazonOrderList.get(index);
                    index++;
                    connect = DriverManager.getConnection("jdbc:mysql://localhost/locdb1?" + "user=dbuser&password=dbpass");
                    String sql = "INSERT INTO omazon_order (order_id, product_id, product_name, customer_id, order_date, order_start_lat, order_start_long, order_end_lat, "
                            + "order_end_long, order_carrier, order_carrier_id, order_status_lat, order_status_long, order_expected_deldate, order_status, order_exception_desc)"
                            + "VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    ps = connect.prepareStatement(sql);
                    ps.setInt(1, order.getOrderId());
                    ps.setInt(2, order.getProductId());
                    ps.setString(3, order.getProductName());
                    ps.setInt(4, order.getCustomerId());
                    java.sql.Date sqlDate = new java.sql.Date(order.getOrderDate().getTime());
                    ps.setDate(5, sqlDate);
                    ps.setBigDecimal(6, order.getOrderStartLat());
                    ps.setBigDecimal(7, order.getOrderStartLong());
                    ps.setBigDecimal(8, order.getOrderEndLat());
                    ps.setBigDecimal(9, order.getOrderEndLong());
                    ps.setString(10, order.getOrderCarrier());
                    ps.setInt(11, order.getOrderCarrierId());
                    ps.setBigDecimal(12, order.getOrderStatusLat());
                    ps.setBigDecimal(13, order.getOrderStatusLong());
                    sqlDate = new java.sql.Date(order.getOrderExpectedDeldate().getTime());
                    ps.setDate(14, sqlDate);
                    ps.setString(15, order.getOrderStatus().toString());
                    ps.setString(16, order.getOrderExceptionDesc());
                    rowCount = ps.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(addProduct.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        connect.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(addProduct.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    connect.close();
                } catch (SQLException ex) {
                    Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    private void updateProductTable() {
        int index = 0;
        List<OmazonProduct> omazonProductList = null;
        OmazonProduct product = null;
        Connection connect = null;
        PreparedStatement ps;
        int rowCount;

        omazonProductList = Main.omazonProductEJB.findAllProducts();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost/locdb1?" + "user=dbuser&password=dbpass");
            String query = "delete from omazon_product";
            ps = connect.prepareStatement(query);
            rowCount = ps.executeUpdate();
        } catch (Exception e) {
            Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                connect.close();
            } catch (SQLException ex) {
                Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        while (index != omazonProductList.size()) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                try {
                    product = omazonProductList.get(index);
                    index++;
                    connect = DriverManager.getConnection("jdbc:mysql://localhost/locdb1?" + "user=dbuser&password=dbpass");
                    String sql = "INSERT INTO omazon_product (product_id, product_name, product_type, product_price) " + "VALUES(?,?,?,?)";
                    ps = connect.prepareStatement(sql);
                    ps.setInt(1, product.getProductId());
                    ps.setString(2, product.getProductName());
                    ps.setString(3, product.getProductType());
                    ps.setInt(4, product.getProductPrice());
                    rowCount = ps.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(addProduct.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    try {
                        connect.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(addProduct.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    connect.close();
                } catch (SQLException ex) {
                    Logger.getLogger(addOrder.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    public void close() {
        WindowEvent winclose = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winclose);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new index().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
